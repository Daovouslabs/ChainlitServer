datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 5
}

model User {
  id            Int             @id @default(autoincrement())
  openId        String          @unique
  createdAt     DateTime        @default(now())
  email         String?         @unique
  name          String?
  roles          String[]
  conversations Conversation[]

  @@index([openId, createdAt(sort: Desc)])
}

// ALTER TABLE "User"
//    ADD UNIQUE USING INDEX "User_openId_key"

model Conversation {
  id        Int       @id @default(autoincrement())
  sessionId String?
  createdAt DateTime  @default(now())
  messages  Message[]
  elements  Element[]
  authorId  String?
  author    User? @relation(fields: [authorId], references: [openId])
  @@index([authorId, createdAt(sort: Desc)])
}

model Element {
  id             Int          @id @default(autoincrement())
  createdAt      DateTime     @default(now())
  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  type           String
  url            String
  name           String
  display        String
  size           String?
  language       String?
  forIds         String[]
}

model Message {
  id             Int          @id @default(autoincrement())
  createdAt      DateTime     @default(now())
  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  authorIsUser   Boolean      @default(false)
  isError        Boolean      @default(false)
  waitForAnswer  Boolean      @default(false)
  indent         Int          @default(0)
  author         String
  content        String
  humanFeedback  Int          @default(0)
  language       String?
  parentId       Int?
  prompt         String?
  llmSettings    Json?
  ts_vector      Unsupported("tsvector")?

  @@index([humanFeedback, authorIsUser, createdAt(sort: Desc)])
}

model Example {
  id             Int          @id @default(autoincrement())
  createdAt      DateTime     @default(now())
  name           String
  prompt         String
  status         String
  tags            String[]
}